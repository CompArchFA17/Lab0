$date
	Tue Sep 26 21:21:39 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testFullAdder $end
$scope module adder1 $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # carryout $end
$var wire 1 $ carryout0 $end
$var wire 1 % carryout1 $end
$var wire 1 & carryout2 $end
$var wire 1 ' overflow $end
$var wire 4 ( sum [3:0] $end
$scope module adder0 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + carryin $end
$var wire 1 $ carryout $end
$var wire 1 , cout1 $end
$var wire 1 - cout2 $end
$var wire 1 . cout3 $end
$var wire 1 / cout4 $end
$var wire 1 0 na $end
$var wire 1 1 nb $end
$var wire 1 2 ncarryin $end
$var wire 1 3 s1 $end
$var wire 1 4 s2 $end
$var wire 1 5 s3 $end
$var wire 1 6 s4 $end
$var wire 1 7 sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 $ carryin $end
$var wire 1 % carryout $end
$var wire 1 : cout1 $end
$var wire 1 ; cout2 $end
$var wire 1 < cout3 $end
$var wire 1 = cout4 $end
$var wire 1 > na $end
$var wire 1 ? nb $end
$var wire 1 @ ncarryin $end
$var wire 1 A s1 $end
$var wire 1 B s2 $end
$var wire 1 C s3 $end
$var wire 1 D s4 $end
$var wire 1 E sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 % carryin $end
$var wire 1 & carryout $end
$var wire 1 H cout1 $end
$var wire 1 I cout2 $end
$var wire 1 J cout3 $end
$var wire 1 K cout4 $end
$var wire 1 L na $end
$var wire 1 M nb $end
$var wire 1 N ncarryin $end
$var wire 1 O s1 $end
$var wire 1 P s2 $end
$var wire 1 Q s3 $end
$var wire 1 R s4 $end
$var wire 1 S sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 & carryin $end
$var wire 1 # carryout $end
$var wire 1 V cout1 $end
$var wire 1 W cout2 $end
$var wire 1 X cout3 $end
$var wire 1 Y cout4 $end
$var wire 1 Z na $end
$var wire 1 [ nb $end
$var wire 1 \ ncarryin $end
$var wire 1 ] s1 $end
$var wire 1 ^ s2 $end
$var wire 1 _ s3 $end
$var wire 1 ` s4 $end
$var wire 1 a sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0a
0`
0_
0^
0]
1\
1[
1Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
1N
1M
1L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
1@
1?
1>
0=
0<
0;
0:
09
08
07
06
05
04
03
12
11
10
0/
0.
0-
0,
0+
0*
0)
b0 (
0'
0&
0%
0$
0#
b0 "
b0 !
$end
#50000
1S
b100 (
0L
1Q
1F
b100 !
#150000
0S
1a
b1000 (
1L
0Q
0Z
1_
0F
1T
b1000 !
#200000
1S
b1100 (
0L
1Q
1F
b1100 !
#250000
0a
b100 (
0M
1P
1L
0Q
1Z
0_
1G
0F
0T
b100 "
b0 !
#300000
1a
0S
b1000 (
0\
1]
1'
0P
1&
0L
1J
1F
b100 !
#350000
0'
1_
1S
1\
1a
b1100 (
1P
0&
0]
0#
1L
0J
0Z
0W
0F
1T
b1000 !
#400000
0a
0_
1#
0S
b0 (
0\
1W
0'
0P
1&
0L
1J
1F
b1100 !
#450000
1a
b1000 (
1^
0#
1\
0'
0&
1M
0[
0V
1L
0J
1Z
0W
0G
1U
0F
0T
b1000 "
b0 !
#500000
1S
b1100 (
0L
1Q
1F
b100 !
#550000
0a
1'
0S
b0 (
0^
1#
1L
0Q
0Z
1X
0F
1T
b1000 !
#600000
1S
b100 (
0L
1Q
1F
b1100 !
#650000
1a
b1100 (
0'
1^
0#
0M
1P
1L
0Q
1Z
0X
1G
0F
0T
b1100 "
b0 !
#700000
0a
0^
1#
0S
b0 (
0\
1V
0'
0P
1&
0L
1J
1F
b100 !
#750000
1X
1#
1S
1\
1'
1P
0&
0V
0a
b100 (
1L
0J
0Z
0`
0Y
0F
1T
b1000 !
#800000
0X
1a
0S
b1000 (
0\
1`
1Y
0'
0P
1&
0L
1J
1F
b1100 !
#850000
0J
1S
0@
1D
1=
0N
1R
1K
07
1$
1E
b1110 (
1%
01
0?
00
05
1.
0>
0C
0<
1*
19
1)
18
b1111 "
b1111 !
#900000
