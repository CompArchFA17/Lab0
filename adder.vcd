$date
	Sat Sep 23 16:40:40 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testFullAdder1bit $end
$var wire 1 ! sum $end
$var wire 1 " carryout $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % carryin $end
$scope module adder $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % carryin $end
$var wire 1 " carryout $end
$var wire 1 & cout1 $end
$var wire 1 ' cout2 $end
$var wire 1 ! sum $end
$var wire 1 ( sumAB $end
$upscope $end
$upscope $end
$scope module testFullAdder4bit $end
$var wire 4 ) sum [3:0] $end
$var wire 1 * overflow $end
$var wire 1 + carryout $end
$var reg 4 , a [3:0] $end
$var reg 4 - b [3:0] $end
$scope module adder $end
$var wire 4 . a [3:0] $end
$var wire 4 / b [3:0] $end
$var wire 1 * overflow $end
$var wire 4 0 sum [3:0] $end
$var wire 1 1 carryout2 $end
$var wire 1 2 carryout1 $end
$var wire 1 3 carryout0 $end
$var wire 1 + carryout $end
$scope module adder0 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 carryin $end
$var wire 1 3 carryout $end
$var wire 1 7 cout1 $end
$var wire 1 8 cout2 $end
$var wire 1 9 sum $end
$var wire 1 : sumAB $end
$upscope $end
$scope module adder1 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 3 carryin $end
$var wire 1 2 carryout $end
$var wire 1 = cout1 $end
$var wire 1 > cout2 $end
$var wire 1 ? sum $end
$var wire 1 @ sumAB $end
$upscope $end
$scope module adder2 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 2 carryin $end
$var wire 1 1 carryout $end
$var wire 1 C cout1 $end
$var wire 1 D cout2 $end
$var wire 1 E sum $end
$var wire 1 F sumAB $end
$upscope $end
$scope module adder3 $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 1 carryin $end
$var wire 1 + carryout $end
$var wire 1 I cout1 $end
$var wire 1 J cout2 $end
$var wire 1 K sum $end
$var wire 1 L sumAB $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xL
xK
xJ
xI
0H
0G
xF
xE
xD
xC
0B
0A
x@
x?
x>
x=
0<
0;
x:
x9
x8
x7
06
05
04
x3
x2
x1
bx 0
b0 /
b0 .
b0 -
b0 ,
x+
x*
bx )
x(
x'
x&
0%
0$
0#
x"
x!
$end
#50000
0:
07
0@
0=
0F
0C
0L
0I
08
0'
0&
0(
#100000
bx0 )
bx0 0
09
0>
0D
0J
03
0"
0!
#150000
02
01
0+
bx00 )
bx00 0
0?
#200000
0E
b0 )
b0 0
0K
0*
#1000000
1#
#1050000
1(
#1100000
1!
#2000000
1$
0#
#3000000
1%
0$
#3050000
0!
1'
0(
#3100000
1"
1!
0'
#3150000
0"
#4000000
0%
1$
1#
#4050000
0!
1&
#4100000
1"
#5000000
1%
0$
#5050000
1!
1(
0&
#5100000
0!
1'
0"
#5150000
1"
#6000000
1$
0#
#7000000
1#
#7050000
0(
1&
#7100000
1!
0'
#8000000
