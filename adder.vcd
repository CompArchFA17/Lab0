$date
	Mon Sep 25 22:03:30 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testFullAdder $end
$var wire 1 ! carryout $end
$var wire 1 " overflow $end
$var wire 4 # s [3:0] $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module adder $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( carryin1 $end
$var wire 1 ) carryin2 $end
$var wire 1 * carryin3 $end
$var wire 1 ! carryout $end
$var wire 1 " overflow $end
$var wire 4 + sum [3:0] $end
$scope module adder0 $end
$var wire 1 , a $end
$var wire 1 - aandb $end
$var wire 1 . aorb $end
$var wire 1 / axorb $end
$var wire 1 0 b $end
$var wire 1 1 carryOutWire $end
$var wire 1 2 carryin $end
$var wire 1 ( carryout $end
$var wire 1 3 nCarryIn $end
$var wire 1 4 notaxorb $end
$var wire 1 5 sum $end
$var wire 1 6 sumWire0 $end
$var wire 1 7 sumWire1 $end
$upscope $end
$scope module adder1 $end
$var wire 1 8 a $end
$var wire 1 9 aandb $end
$var wire 1 : aorb $end
$var wire 1 ; axorb $end
$var wire 1 < b $end
$var wire 1 = carryOutWire $end
$var wire 1 ( carryin $end
$var wire 1 ) carryout $end
$var wire 1 > nCarryIn $end
$var wire 1 ? notaxorb $end
$var wire 1 @ sum $end
$var wire 1 A sumWire0 $end
$var wire 1 B sumWire1 $end
$upscope $end
$scope module adder2 $end
$var wire 1 C a $end
$var wire 1 D aandb $end
$var wire 1 E aorb $end
$var wire 1 F axorb $end
$var wire 1 G b $end
$var wire 1 H carryOutWire $end
$var wire 1 ) carryin $end
$var wire 1 * carryout $end
$var wire 1 I nCarryIn $end
$var wire 1 J notaxorb $end
$var wire 1 K sum $end
$var wire 1 L sumWire0 $end
$var wire 1 M sumWire1 $end
$upscope $end
$scope module adder3 $end
$var wire 1 N a $end
$var wire 1 O aandb $end
$var wire 1 P aorb $end
$var wire 1 Q axorb $end
$var wire 1 R b $end
$var wire 1 S carryOutWire $end
$var wire 1 * carryin $end
$var wire 1 ! carryout $end
$var wire 1 T nCarryIn $end
$var wire 1 U notaxorb $end
$var wire 1 V sum $end
$var wire 1 W sumWire0 $end
$var wire 1 X sumWire1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xX
xW
xV
zU
xT
xS
0R
zQ
zP
zO
0N
xM
xL
xK
zJ
xI
xH
1G
zF
zE
zD
0C
xB
xA
x@
z?
x>
x=
0<
z;
z:
z9
08
z7
x6
x5
z4
z3
02
z1
10
z/
z.
z-
0,
bx +
x*
x)
x(
b101 '
b0 &
b101 %
b0 $
bx #
x"
x!
$end
#50000
0P
0O
0Q
1E
0D
1F
0:
09
0;
01
1.
0-
07
13
1/
#100000
0S
0W
1U
0J
0=
0A
1?
0(
16
04
#150000
0!
0M
0)
1>
0B
15
bx1 #
bx1 +
#200000
1I
0H
0@
bx01 #
bx01 +
#250000
1L
0*
#300000
1K
bx101 #
bx101 +
1T
0X
0"
#350000
0V
b101 #
b101 +
#1000000
0G
1,
18
b1 %
b1 '
b11 $
b11 &
#1050000
0F
0E
0/
1-
1;
1:
#1100000
0L
1J
06
14
1(
1A
0?
#1150000
0K
05
0>
1=
1@
b10 #
b10 +
#1200000
0A
1)
#1250000
0@
b0 #
b0 +
0I
1M
#1300000
1K
b100 #
b100 +
#2000000
1<
08
1C
b11 %
b11 '
b101 $
b101 &
#2050000
1F
1E
#2100000
0J
1H
#2150000
0M
1*
#2200000
0K
b0 #
b0 +
0T
1X
1"
#2250000
1V
b1000 #
b1000 +
#3000000
00
1G
18
b110 %
b110 '
b111 $
b111 &
#3050000
1/
0-
0F
1D
0;
19
#3100000
16
04
0(
1J
1?
#3150000
15
b1001 #
b1001 +
1>
0=
1M
#3200000
1K
b1101 #
b1101 +
#4000000
1R
08
0C
1N
b1110 %
b1110 '
b1001 $
b1001 &
#4050000
1;
09
1F
0D
1O
1P
#4100000
1A
0?
0)
0J
1!
1S
#4150000
1@
b1111 #
b1111 +
1I
0H
0M
0"
#4200000
1L
0*
0K
b1011 #
b1011 +
#4250000
1K
b1111 #
b1111 +
1T
0X
0S
1"
#4300000
0V
b111 #
b111 +
#5000000
10
0G
18
b1011 %
b1011 '
b1011 $
b1011 &
#5050000
0/
1-
0F
0E
0;
19
#5100000
06
14
1(
0L
1J
0A
1?
1)
#5150000
05
0>
1=
0K
0@
b0 #
b0 +
1B
0I
1M
#5200000
1@
1K
b110 #
b110 +
#6000000
08
1C
b1101 $
b1101 &
#6050000
1;
09
1F
1E
#6100000
0?
0J
1H
#6150000
0B
0M
1*
#6200000
0@
0K
b0 #
b0 +
0T
1X
1S
0"
#6250000
1V
b1000 #
b1000 +
#7000000
00
18
b1010 %
b1010 '
b1111 $
b1111 &
#7050000
1/
0-
0;
19
#7100000
16
04
0(
1?
#7150000
15
b1001 #
b1001 +
1>
0=
#8000000
